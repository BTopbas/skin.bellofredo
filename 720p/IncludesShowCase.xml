<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="MovieShowcaseThumb">
		<left>-4</left>
		<top>-16</top>
		<width>304</width>
		<height>436</height>
		<align>center</align>
		<aspectratio scalediffuse="false">scale</aspectratio>
		<fadetime>0</fadetime>
		<bordertexture border="20">thumbs/thumb_shadow_aa.png</bordertexture>
		<bordersize>20</bordersize>
	</include>
	<include name="MovieShowcaseThumbReflection">
		<aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
		<fadetime>0</fadetime>
		<left>16</left>
		<top>400</top>
		<width>264</width>
		<height>396</height>
		<colordiffuse>d1FFFFFF</colordiffuse>
	</include>
	<include name="WatchedOverlayShowCase">
		<left>180</left>
		<top>-16</top>
		<width>120</width>
		<height>120</height>
		<fadetime>0</fadetime>
		<bordersize>20</bordersize>
	</include>
	<include name="MovieShowCaseItem-7">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-7Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-7</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-7Var]</texture>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem-6">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-6Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-6</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-6Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>121</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem-5">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-5Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-5</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-5Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>131</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem-4">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-4Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-4</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-4Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>145</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem-3">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-3Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-3</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-3Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>160</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem-2">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-2Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-2</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-2Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>179</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem-1">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-1Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay-1Var]</texture>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon-1</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem-1Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="left">scale</aspectratio>
			<width>180</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem0">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem0Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay0Var]</texture>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon0</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem0Var]</texture>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem1">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem1Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay1Var]</texture>
		</control>
		<control type="group">
			<left>28</left>
			<top>22</top>
			<include condition="Skin.HasSetting(Disable.UnwatchedIcon)">UnwatchedIcon1</include>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem1Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
			<left>86</left>
			<width>192</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem2">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem2Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay2Var]</texture>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem2Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
			<left>102</left>
			<width>177</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem3">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem3Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay3Var]</texture>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem3Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
			<left>121</left>
			<width>158</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem4">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem4Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay4Var]</texture>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem4Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
			<left>136</left>
			<width>142</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem5">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem5Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay5Var]</texture>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem5Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
			<left>146</left>
			<width>133</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem6">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem6Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay6Var]</texture>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem6Var]</texture>
			<aspectratio scalediffuse="false" aligny="top" align="right">scale</aspectratio>
			<left>158</left>
			<width>122</width>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<include name="MovieShowCaseItem7">
		<control type="image">
			<texture background="true" diffuse="thumbs/thumb_mask.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem7Var]</texture>
			<include>MovieShowcaseThumb</include>
		</control>
		<control type="image">
			<include>WatchedOverlayShowCase</include>
			<texture>$VAR[IconOverlay7Var]</texture>
		</control>
		<control type="image">
			<texture background="true" flipy="true" diffuse="thumbs/thumb_diffuse.png" fallback="DefaultVideo.png">$VAR[ShowcaseItem7Var]</texture>
			<include>MovieShowcaseThumbReflection</include>
		</control>
	</include>
	<variable name="ShowcaseItem-7Var">
		<value condition="!IsEmpty(ListItem(-7).Art(poster))">$INFO[ListItem(-7).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(-7).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(-7).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-6Var">
		<value condition="!IsEmpty(ListItem(-6).Art(poster))">$INFO[ListItem(-6).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(-6).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(-6).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-5Var">
		<value condition="!IsEmpty(ListItem(-5).Art(poster))">$INFO[ListItem(-5).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(-5).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(-5).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-4Var">
		<value condition="!IsEmpty(ListItem(-4).Art(poster))">$INFO[ListItem(-4).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(-4).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(-4).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-3Var">
		<value condition="!IsEmpty(ListItem(-3).Art(poster))">$INFO[ListItem(-3).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(-3).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(-3).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-2Var">
		<value condition="!IsEmpty(ListItem(-2).Art(poster))">$INFO[ListItem(-2).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(-2).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(-2).Icon]</value>
	</variable>
	<variable name="ShowcaseItem-1Var">
		<value condition="!IsEmpty(ListItem(-1).Art(poster))">$INFO[ListItem(-1).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(-1).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(-1).Icon]</value>
	</variable>
	<variable name="ShowcaseItem0Var">
		<value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem.Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="ShowcaseItem1Var">
		<value condition="!IsEmpty(ListItem(1).Art(poster))">$INFO[ListItem(1).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(1).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(1).Icon]</value>
	</variable>
	<variable name="ShowcaseItem2Var">
		<value condition="!IsEmpty(ListItem(2).Art(poster))">$INFO[ListItem(2).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(2).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(2).Icon]</value>
	</variable>
	<variable name="ShowcaseItem3Var">
		<value condition="!IsEmpty(ListItem(3).Art(poster))">$INFO[ListItem(3).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(3).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(3).Icon]</value>
	</variable>
	<variable name="ShowcaseItem4Var">
		<value condition="!IsEmpty(ListItem(4).Art(poster))">$INFO[ListItem(4).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(4).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(4).Icon]</value>
	</variable>
	<variable name="ShowcaseItem5Var">
		<value condition="!IsEmpty(ListItem(5).Art(poster))">$INFO[ListItem(5).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(5).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(5).Icon]</value>
	</variable>
	<variable name="ShowcaseItem6Var">
		<value condition="!IsEmpty(ListItem(6).Art(poster))">$INFO[ListItem(6).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(6).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(6).Icon]</value>
	</variable>
	<variable name="ShowcaseItem7Var">
		<value condition="!IsEmpty(ListItem(7).Art(poster))">$INFO[ListItem(7).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(7).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(7).Icon]</value>
	</variable>
	<variable name="ShowcaseItem8Var">
		<value condition="!IsEmpty(ListItem(8).Art(poster))">$INFO[ListItem(8).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(8).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(8).Icon]</value>
	</variable>
	<variable name="ShowcaseItem9Var">
		<value condition="!IsEmpty(ListItem(9).Art(poster))">$INFO[ListItem(9).Art(poster)]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem(9).Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value>$INFO[ListItem(9).Icon]</value>
	</variable>
	<variable name="IconOverlay-1Var">
		<value condition="ListItem(-1).IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(-1).Overlay]</value>
	</variable>
	<variable name="IconOverlay0Var">
		<value condition="ListItem.IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem.Overlay]</value>
	</variable>
	<variable name="IconOverlay1Var">
		<value condition="ListItem(1).IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(1).Overlay]</value>
	</variable>
	<variable name="IconOverlay2Var">
		<value condition="ListItem(2).IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(2).Overlay]</value>
	</variable>
	<variable name="IconOverlay3Var">
		<value condition="ListItem(3).IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(3).Overlay]</value>
	</variable>
	<variable name="IconOverlay4Var">
		<value condition="ListItem(4).IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(4).Overlay]</value>
	</variable>
	<variable name="IconOverlay5Var">
		<value condition="ListItem(5).IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(5).Overlay]</value>
	</variable>
	<variable name="IconOverlay6Var">
		<value condition="ListItem(6).IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(6).Overlay]</value>
	</variable>
	<variable name="IconOverlay7Var">
		<value condition="ListItem(7).IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(7).Overlay]</value>
	</variable>
	<variable name="IconOverlay8Var">
		<value condition="ListItem(8).IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(8).Overlay]</value>
	</variable>
	<variable name="IconOverlay9Var">
		<value condition="ListItem(9).IsResumable + IsEmpty(Window(Home).Property(Overlay.Resumable))">overlays/showcase/resumable.png</value>
		<value>$INFO[Window(Home).Property(Overlay.Path)]$INFO[ListItem(9).Overlay]</value>
	</variable>
	<include name="UnwatchedIconCircle">
		<control type="image">
			<width>36</width>
			<height>36</height>
			<aspectratio>keep</aspectratio>
			<texture>circle.png</texture>
		</control>
	</include>
	<include name="UnwatchedIconVars">
		<top>2</top>
		<width>36</width>
		<height>36</height>
		<align>center</align>
		<aligny>top</aligny>
		<font>font10</font>
		<textcolor>FF000000</textcolor>
		<scroll>false</scroll>
	</include>
	<include name="UnwatchedIcon">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon1">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + IntegerGreaterThan(ListItem(1).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(1).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon0">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem.Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon-1">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + IntegerGreaterThan(ListItem(-1).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(-1).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon-2">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + IntegerGreaterThan(ListItem(-2).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(-2).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon-3">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + IntegerGreaterThan(ListItem(-3).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(-3).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon-4">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + IntegerGreaterThan(ListItem(-4).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(-4).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon-5">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + IntegerGreaterThan(ListItem(-5).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(-5).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon-6">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + IntegerGreaterThan(ListItem(-6).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(-6).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
	<include name="UnwatchedIcon-7">
		<control type="group">
			<visible>[Container.Content(tvshows) | Container.Content(seasons)] + IntegerGreaterThan(ListItem(-7).Property(UnWatchedEpisodes),0)</visible>
			<include>UnwatchedIconCircle</include>
			<control type="label">
				<include>UnwatchedIconVars</include>
				<label>$INFO[ListItem(-7).Property(UnWatchedEpisodes)]</label>
			</control>
		</control>
	</include>
</includes>
